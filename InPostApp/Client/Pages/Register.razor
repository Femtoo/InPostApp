@page "/register"
@using Blazored.LocalStorage
@using InPostApp.Shared.ModelsDto
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage



<div style="margin-left: 20%; margin-right:20%">
    <div class="d-inline-block pa-10">
        <div class="d-block pa-2">
            <MudTextField @bind-Value="user.Username" Label="Login" Variant="Variant.Outlined" Class="d-block"></MudTextField>
        </div>
        <div class="d-block pa-2">
            <MudTextField @bind-Value="user.Password" Label="Password" Variant="Variant.Outlined" Class="d-block"></MudTextField>
        </div>
        <div class="d-block pa-2">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="d-block" OnClick="OnSubmit">Register</MudButton>
        </div>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="d-block" OnClick="Login">Back To Login</MudButton>
        <div class="text-danger">
            <span>@errorMessage</span>
        </div>
    </div>
</div>


@code {
    UserDto user = new UserDto();
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.Name != null)
        {
            NavigationManager.NavigateTo($"/shipment/list");
        }
    }

    void Login()
    {
        NavigationManager.NavigateTo($"/login");

    }
    async Task OnSubmit()
    {
        var result = await Http.PostAsJsonAsync("api/auth/register", user);
        if (result.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo($"/login");
        }
        else
        {
            errorMessage = await result.Content.ReadAsStringAsync();
        }
    }
}